{"version":3,"sources":["components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","onChange","type","name","href","React","Component","Register","onNameChange","Logo","options","max","height","width","paddingTop","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.ed413145.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    if (isSignedIn) {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign out</p>\n            </nav>\n        );\n    } else {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign in</p>\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n            </nav>\n        );\n    }\n}\n\nexport default Navigation; ","import React from 'react';\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n        }\n    }\n\n    onEmailChange = (event) => {\n        this.setState({ signInEmail: event.target.value })\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({ signInPassword: event.target.value })\n    }\n\n    onSubmitSignIn = () => {\n        // console.log(this.state);\n        fetch('https://tho6-smartbrain-server.herokuapp.com/signin', { // fetch backend / localhost:8080\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) { // check if user exists\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input onClick={this.onSubmitSignIn} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\n                            {/* <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" /> */}\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n\n    onNameChange = (event) => {\n        this.setState({ name: event.target.value })\n    }\n\n    onEmailChange = (event) => {\n        this.setState({ email: event.target.value })\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({ password: event.target.value })\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://tho6-smartbrain-server.herokuapp.com/register', { // fetch backend / localhost:8080\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user)\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n\n    render() {\n        // const {onRouteChange} = this.props;\n\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                                <input onChange={this.onNameChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\n                            </div>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            {/* <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" /> */}\n                            <input onClick={this.onSubmitSignIn} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default Register;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './brain.png';\nimport './Logo.css';\n\nconst Logo = () => {\n    return (\n        <div className='ma4 mt0'>\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 55 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner pa3\">\n                    <img style={{ paddingTop: '5px' }} src={brain} alt='logo' />\n                </div>\n            </Tilt>\n        </div>\n    );\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n            <p className='f3'>\n                {'This Magic Brain will detect faces in your pictures. Give it a try.'}\n            </p>\n            <div className='center'>\n                <div className='form center pa4 br3 shadow-5'>\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({name, entries}) => {\n    return (\n        <div>\n            <div className='white f3'>\n                {`${name}, your current entry count is...`}\n                {/* {'Tavin, your current rank is...'} */}\n            </div>\n            <div className='white f1'>\n                {`${entries}`}\n                {/* {'#5'} */}\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n    // console.log('check', imageUrl)\n    return (\n        <div className='center ma'>\n            <div className='absolute mt2'>\n                <img id='inputimage' src={imageUrl} alt='' width='500px' height='auto' />\n                <div className='bounding-box' style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\n            </div>\n        </div>\n    );\n}\n\nexport default FaceRecognition;","import React from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  // componentDidMount() {\n  //   fetch('http://localhost:8080')\n  //     .then(response => response.json())\n  //     .then(data => console.log(data))\n  // }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    // console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    // console.log(box);\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    // console.log(event.target.value);\n    this.setState({ input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    // console.log('clicked');\n    this.setState({ imageUrl: this.state.input });\n    fetch('https://tho6-smartbrain-server.herokuapp.com/imageurl', { // fetch backend / localhost:8080\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        // do something with response\n        // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n        if (response) { // as long as we have response\n          fetch('https://tho6-smartbrain-server.herokuapp.com/image', { // fetch backend / localhost:8080\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n              //   {\n              //     user: {\n              //       entries: count\n              //     }\n              //   }\n              // )\n            })\n            .catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n    // there was an error\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route });\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n\n          : (\n            route === 'signin'\n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/brain.d9407b23.png\";"],"sourceRoot":""}